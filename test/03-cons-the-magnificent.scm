(load "./../src/03-cons-the-magnificent.scm")
(load "./../lib/test-manager/load.scm")

(in-test-group
 03-cons-the-magnificent
 (define-test (rember-test)
   (assert-equal '(lamb chops and jelly)
                 (rember 'mint '(lamb chops and mint jelly))
                 "Remove one symbol from list")
   (assert-equal '(lamb chops and flavored mint jelly)
                 (rember 'mint '(lamb chops and mint flavored mint jelly))
                 "Only remove first symbol from list")
   (assert-equal '(lamb chops and jelly)
                 (rember 'missing '(lamb chops and jelly))
                 "Do not remove when member not found."))
 (define-test (firsts-test)
   (assert-equal '(apple plum grape bean)
                 (firsts '((apple peach pumpkin)
                           (plum pear cherry)
                           (grape raisin pea)
                           (bean carrot eggplant)))
                 "first item in each listt"))
 (define-test (insertR-test)
   (assert-equal '(ice cream with fudge topping for dessert)
                 (insertR 'topping 'fudge '(ice cream with fudge for dessert))
                 "insert symb to right of another")
   (assert-equal '(ice cream with fudge for dessert)
                 (insertR 'topping 'bogus '(ice cream with fudge for dessert))
                 "insert not found "))
 (define-test (insertL-test)
   (assert-equal '(ice cream with topping fudge for dessert)
                 (insertL 'topping 'fudge '(ice cream with fudge for dessert))
                 "insert found value to left of symbol")
   (assert-equal '(ice cream with fudge for dessert)
                 (insertL 'topping 'bogus '(ice cream with fudge for dessert))
                 "insert not found"))
 (define-test (subst2-test)
   (assert-equal '(vanilla ice cream with chocolate topping)
                 (subst2 'vanilla 'chocolate 'banana
                         '(banana ice cream with chocolate topping))
                 "change first found value")
   (assert-equal '(vanilla bananna ice cream with  topping)
                 (subst2 'vanilla 'bananna 'chocolate
                         '(chocolate bananna ice cream with topping))
                 "second search symb is found first"))
 (define-test (multirember-test)
   (assert-equal '(coffee tea and hick)
                 (multirember 'cup '(coffee cup tea cup and hick cup))
                 "remove item when in list twice"))
 (define-test (multiinsertR-test)
   (assert-equal '(i love coffee tea and more coffee tea)
                 (multiinsertR 'tea 'coffee
                               '(i love coffee and more coffee))
                 "insert 2 values to right"))
 (define-test (multiinsertL-test)
   (assert-equal '(i love tea coffee and more tea coffee)
                 (multiinsertL  'tea 'coffee
                                '(i love coffee and more coffee))
                 "isnert 2 values to left"))
 (define-test (multisubst-test)
   (assert-equal '(a a a)
                 (multisubst 'a 'b  '(b b b))
                 "replace all occurences of b with a")
   (assert-equal '(a a a)
                 (multisubst 'q 'f '(a a a))
                 "no replacements found")))

(run-registered-tests)
